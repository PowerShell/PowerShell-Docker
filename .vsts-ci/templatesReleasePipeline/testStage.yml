parameters:
    - name: "channel"
      default: 'preview'
    - name: "vmImage"
      default: 'ubuntu-16.04'
    - name: "acr"
      default: 'All'
    - name: "useacr"
      default: 'false'
    - name: "osFilter"
      default: 'All'

stages:
    - stage: Test_${{ parameters.channel }}
      dependsOn: []
      displayName: Test ${{ parameters.channel }}
      variables:
        - name: docker_release
          value: True
      jobs:
      - job: GenerateYaml_${{ parameters.channel }}
        pool:
          vmImage: ubuntu-16.04
        displayName: Generate Matrix YAML ${{ parameters.channel }}
        steps:
        - pwsh: |
            ./build.ps1 -GenerateMatrixJson -Channel ${{ parameters.channel }} -Verbose -Acr ${{ parameters.acr }} -OsFilter ${{ parameters.osFilter }}
          displayName: Generate Matrix YAML
          condition: succeededOrFailed()
          name: matrix
        - pwsh: |
            dir env:matrix_* | out-string -Width 1000
          displayName: Capture Matrix YAML
          condition: succeededOrFailed()

      - template: ./testJob.yml
        parameters:
          jobName: ${{ parameters.channel }}_windows
          matrix: dependencies.GenerateYaml_${{ parameters.channel }}.outputs['matrix.matrix_${{ parameters.channel }}_windows']
          vmImage: windows-latest
          tagfilter: 1809
          dependsOn:
            - GenerateYaml_${{ parameters.channel }}

      - template: ./testJob.yml
        parameters:
          jobName: ${{ parameters.channel }}_linux
          matrix: dependencies.GenerateYaml_${{ parameters.channel }}.outputs['matrix.matrix_${{ parameters.channel }}_linux']
          vmImage: ubuntu-latest
          dependsOn:
            - GenerateYaml_${{ parameters.channel }}
