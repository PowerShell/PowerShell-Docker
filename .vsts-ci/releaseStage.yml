# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
parameters:
- name: channel
  default: 'preview'
- name: channelPath
  default: ''
- name: vmImage
  default: PSMMSUbuntu20.04-Secure
- name: acr
  default: 'All'
- name: useacr
  default: 'false'
- name: osFilter
  default: 'All'
stages:
- stage: StageGenerateYaml_${{ parameters.channel }}
  dependsOn: ['StageGenerateFullTag']
  displayName: Build ${{ parameters.channel }}
  jobs:
  - job: JobGenerateYaml_${{ parameters.channel }}
    pool:
      type: windows
    displayName: Generate Matrix YAML ${{ parameters.channel }}
    variables:
    - name: ob_outputDirectory
      value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
    - name: repoRoot
      value: $(Build.SourcesDirectory)
    steps:
    - pwsh: |
        ./build.ps1 -GenerateMatrixJson -Channel ${{ parameters.channel }} -Verbose -Acr ${{ parameters.acr }} -OsFilter ${{ parameters.osFilter }}
      displayName: Generate Matrix YAML
      condition: succeededOrFailed()
      name: matrix
    - pwsh: |
        dir env:matrix_* | out-string -Width 1000
      displayName: Capture Matrix YAML
      condition: succeededOrFailed()
  - template: /.vsts-ci/releasePhase.yml@self
    parameters:
      matrix: dependencies.JobGenerateYaml_${{ parameters.channel }}.outputs['matrix.matrix_${{ parameters.channel }}_linux_amd64']
      dependsOn:
      - JobGenerateYaml_${{ parameters.channel }}
      jobName: Build_Linux_x64
      pool: linux
      channelPath: ${{ parameters.channelPath }}
      channel: ${{ parameters.channel }}
      hostArchitecture: 'amd64'
      buildKitValue: 1
  - template: /.vsts-ci/releasePhase.yml@self
    parameters:
      matrix: dependencies.JobGenerateYaml_${{ parameters.channel }}.outputs['matrix.matrix_${{ parameters.channel }}_linux_arm64']
      dependsOn:
      - JobGenerateYaml_${{ parameters.channel }}
      jobName: Build_Linux_arm64
      pool: linux
      channelPath: ${{ parameters.channelPath }}
      channel: ${{ parameters.channel }}
      hostArchitecture: 'arm64'
      buildKitValue: 1
  - template: /.vsts-ci/releasePhase.yml@self
    parameters:
      matrix: dependencies.JobGenerateYaml_${{ parameters.channel }}.outputs['matrix.matrix_${{ parameters.channel }}_linux_arm32']
      dependsOn:
      - JobGenerateYaml_${{ parameters.channel }}
      jobName: Build_Linux_arm32
      pool: linux
      channelPath: ${{ parameters.channelPath }}
      channel: ${{ parameters.channel }}
      hostArchitecture: 'arm64'
      buildKitValue: 1
  - template: /.vsts-ci/releasePhase.yml@self
    parameters:
      matrix: dependencies.JobGenerateYaml_${{ parameters.channel }}.outputs['matrix.matrix_${{ parameters.channel }}_windows_amd64']
      dependsOn:
      - JobGenerateYaml_${{ parameters.channel }}
      jobName: Build_Win_x64
      channelPath: ${{ parameters.channelPath }}
      channel: ${{ parameters.channel }}
      vmImage: PSMMS2019-Secure
      ACR: yes
      maxParallel: 3
