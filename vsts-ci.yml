name: PR-$(System.PullRequest.PullRequestNumber)-$(Date:yyyyMMdd)$(Rev:.rr)
resources:
- repo: self
  clean: true
phases:
- phase: Ubuntu_Build

  queue:
    name: Hosted Linux Preview
  steps:
  - powershell:  Install-module pester -Scope CurrentUser -Force -SkipPublisherCheck
    displayName: Install Pester
    condition: succeededOrFailed()

  - powershell: ./build.ps1 -build -name ubuntu14.04, ubuntu16.04 -CI -Channel 'stable' -TestLogPostfix UbuntuStable
    displayName: Build Ubuntu Stable
    condition: succeededOrFailed()

  - powershell: ./build.ps1 -build -name ubuntu14.04, ubuntu16.04 -CI -Channel 'preview' -TestLogPostfix UbuntuPreview
    displayName: Build Ubuntu Preview
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: Publish Ubuntu Test Results **\test*.xml
    inputs:
      testRunner: NUnit
      testResultsFiles: '**\test*.xml'
      testRunTitle: Ubuntu
      mergeTestResults: true

- phase: RedHat_Variants_Build

  queue:
    name: Hosted Linux Preview
  steps:
  - powershell:  Install-module pester -Scope CurrentUser -Force -SkipPublisherCheck
    displayName: Install Pester
    condition: succeededOrFailed()

  - powershell: ./build.ps1 -build -name centos7, fedora27 -CI -Channel 'stable' -TestLogPostfix RedHatStable
    displayName: RedHat Variants Stable
    condition: succeededOrFailed()

  - powershell: ./build.ps1 -build -name centos7, fedora27, fedora28 -CI -Channel 'preview' -TestLogPostfix RedHatPreview
    displayName: RedHat Variants Preview
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: Publish RedHat Variants Test Results **\test*.xml
    inputs:
      testRunner: NUnit
      testResultsFiles: '**\test*.xml'
      testRunTitle: RedHat
      mergeTestResults: true

# Use CI switch to disable 1709 and 1803 builds because the VSTS hosted instances don't yet support 1709 or 1803
# Skipping previews on windows due to how long it takes to build on windows
- phase: Windows_Build

  queue:
    name: Hosted VS2017
  steps:
  - powershell:  Install-module pester -Scope CurrentUser -Force -SkipPublisherCheck
    displayName: Install Pester
    condition: succeededOrFailed()

  - powershell: ./build.ps1 -build -name nanoserver, windowsservercore -CI -Channel 'stable'
    displayName: Build Windows Stable
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: Publish Windows Stable Test Results **\TEST*.xml
    inputs:
      testRunner: NUnit
      testResultsFiles: '**\test*.xml'
      testRunTitle: Windows
      mergeTestResults: true
